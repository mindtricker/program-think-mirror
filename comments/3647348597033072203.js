window.g_loadAllComments = function() {
  if (window.isCommentInited) {
    return {
      feed: {}
    }
  }

  var comments = atob('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');
  var inputArray = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) {
    inputArray[i] = comments.charCodeAt(i);
  }
  var outputArray = pako.inflate(inputArray);
  window.isCommentInited = true;
  return JSON.parse(new TextDecoder("utf-8").decode(outputArray));
}