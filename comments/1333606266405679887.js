window.g_loadAllComments = function() {
  if (window.isCommentInited) {
    return {
      feed: {}
    }
  }

  var comments = atob('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');
  var inputArray = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) {
    inputArray[i] = comments.charCodeAt(i);
  }
  var outputArray = pako.inflate(inputArray);
  window.isCommentInited = true;
  return JSON.parse(new TextDecoder("utf-8").decode(outputArray));
}