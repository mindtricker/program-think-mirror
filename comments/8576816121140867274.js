window.g_loadAllComments = function() {
  if (window.isCommentInited) {
    return {
      feed: {}
    }
  }

  var comments = atob('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');
  var inputArray = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) {
    inputArray[i] = comments.charCodeAt(i);
  }
  var outputArray = pako.inflate(inputArray);
  window.isCommentInited = true;
  return JSON.parse(new TextDecoder("utf-8").decode(outputArray));
}