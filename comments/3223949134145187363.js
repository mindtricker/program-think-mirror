window.g_loadAllComments = function() {
  if (window.isCommentInited) {
    return {
      feed: {}
    }
  }

  var comments = atob('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');
  var inputArray = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) {
    inputArray[i] = comments.charCodeAt(i);
  }
  var outputArray = pako.inflate(inputArray);
  window.isCommentInited = true;
  return JSON.parse(new TextDecoder("utf-8").decode(outputArray));
}