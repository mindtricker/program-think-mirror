window.g_loadAllComments = function() {
  if (window.isCommentInited) {
    return {
      feed: {}
    }
  }

  var comments = atob('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');
  var inputArray = new Uint8Array(comments.length);
  for (var i = 0; i < comments.length; i++) {
    inputArray[i] = comments.charCodeAt(i);
  }
  var outputArray = pako.inflate(inputArray);
  window.isCommentInited = true;
  return JSON.parse(new TextDecoder("utf-8").decode(outputArray));
}